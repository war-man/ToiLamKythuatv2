@{
    Layout = null;
}
<script src="~/lib/jquery/dist/jquery.min.js"></script>
<script src="~/lib/jqueryui/jquery-ui.min.js"></script>
<script src="~/lib/elfinder/js/elfinder.min.js"></script>
<link rel="stylesheet" href="~/css/elfinder/theme.css" />
<div id="elfinder" style="height:100%;"></div>
<script type="text/javascript">
    var selectedFilePath = null;

    $(document).ready(function () {
        var myCommands = elFinder.prototype._options.commands;
        var disabled = ['callback', 'chmod', 'editor', 'netmount', 'ping', 'search', 'zipdl', 'help'];
        elFinder.prototype.i18.en.messages.TextArea = "Edit";

        $.each(disabled, function (i, cmd) {
            (idx = $.inArray(cmd, myCommands)) !== -1 && myCommands.splice(idx, 1);
        });
        var options = {
            baseUrl: "/lib/elfinder/",
            url: "/file-system/connector",
            rememberLastDir: false,
            commands: myCommands,
            uiOptions: {
                toolbar: [
                    ['back', 'forward'],
                    ['reload'],
                    ['home', 'up'],
                    ['mkdir', 'mkfile', 'upload'],
                    ['open', 'download'],
                    ['undo', 'redo'],
                    ['info'],
                    ['quicklook'],
                    ['copy', 'cut', 'paste'],
                    ['rm'],
                    ['duplicate', 'rename', 'edit'],
                    ['selectall', 'selectnone', 'selectinvert'],
                    ['view', 'sort']
                ]
            },
            lang: 'vi',
            handlers: {
                select: (event, elfinderInstance) => {
                    if (event.data.selected.length == 1) {
                        var item = $('#' + event.data.selected[0]);
                        if (!item.hasClass('directory')) {
                            selectedFile = event.data.selected[0];
                            $('#elfinder-selectFile').show();
                            return;
                        }
                    }
                    $('#elfinder-selectFile').hide();
                    selectedFile = null;
                }
            },
            getFileCallback: function (file) {
                var fullPath = file.url;
                var funcNum = getUrlParam('CKEditorFuncNum');
                selectedFilePath = file.path;
                var fileUrl = "/"+file.path;
                window.opener.CKEDITOR.tools.callFunction(funcNum, fileUrl);
                window.close();
            }
        };
        $('#elfinder').elfinder(options).elfinder('instance');
    });

    function getUrlParam(paramName) {
        var reParam = new RegExp('(?:[\?&]|&)' + paramName + '=([^&]+)', 'i');
        var match = window.location.search.match(reParam);
        return (match && match.length > 1) ? match[1] : null;
    }
</script>
<script>
    var showFunctionCallback = null;
    var hideFunctionCallback = null;

    $(document).ready(() => {
    });
</script>
